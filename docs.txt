JavaScript interacts with the HTML using the Document Object Model, or DOM. 
The DOM is a tree of objects that represents the HTML. You can access the HTML using the document object, 
which represents your entire HTML document.

The querySelector() method takes a CSS selector as an argument and 
returns the first element that matches that selector.

 If you are not going to assign a new value to a variable, it is best practice to use the const keyword to declare it instead of the let keyword. 
 Always place your script at the end of the page

 button.onclick = myFunction;
In this example, button is the button element, and myFunction is a reference to a function. When the button is clicked, myFunction will be called.

<p id="info">Demo content</p> 
Example Code
const info = document.querySelector("#info"); 
info.innerText = "Hello World"; 
The example above would change the text of the p element from Demo content to Hello World.

You need to wrap the text Store in double quotes. 
Because your string is already wrapped in double quotes, you'll need to escape the quotes around Store. 
You can escape them with a backslash \

const escapedString = "Naomi likes to play \"Zelda\" sometimes.";
Repetition in your code is a sign that you need another function.

Function parameters act as placeholders for values that you pass to the function when you call it.

Objects are non primitive data types that store key-value pairs. 
Non primitive data types are mutable data types that are not undefined, null, boolean, number, string, or symbol. 
Mutable means that the data can be changed after it is created.

If the property name (key) of an object has a space in it, 
you will need to use single or double quotes around the name.

There are two ways to access the properties of an object: dot notation (.) and bracket notation ([]), similar to an array.
Dot notation is what you use when you know the name of the property you're trying to access ahead of time.
Example Code
object.property;
Here is a sample of using dot notation (.) to read the name property of the developer object:
Example Code
const developer = {
  name: "Jessica",
}
// Output: Jessica
console.log(developer.name); 

The second way to access the properties of an object is bracket notation ([]).
If the property of the object you are trying to access has a space in its name, you will need to use bracket notation.
Example Code
objectName["property name"];

Instead of assigning the innerText and onclick properties to specific strings and functions, 
the update function will use data from the location that is passed into it. 
First, that data needs to be passed.

Compound assignment
There is a shorthand way to add or subtract from a variable called compound assignment.
 For example, changing num = num + 5 to compound assignment would look like num += 5.

 When you use a variable in bracket notation, you are accessing the property or index by the value of that variable.

you learned how to work with the shift() method to remove the first element from an array like this:
Example Code
const myArray = ["first", "second", "third"];
const firstElement = myArray.shift();
// myArray is now ["second", "third"]

By default, the HTML element that shows the monster's stats has been hidden with CSS. When the player clicks the "Fight dragon" button, 
the monster's stats should be displayed. You can accomplish this by using the style and display properties on the monsterStats element.
The style property is used to access the inline style of an element and the display property is used to set the visibility of an element.
Here is an example of how to update the display for a paragraph element:
Example Code
const paragraph = document.querySelector('p');
paragraph.style.display = 'block';

The Math object in JavaScript contains static properties and methods for mathematical constants and functions.
 One of those is Math.random(), which generates a random number from 0 (inclusive) to 1 (exclusive). 
 Another is Math.floor(), which rounds a given number down to the nearest integer.
Using these, you can generate a random number within a range. For example, this generates a random number between 1 and 5: 
Math.floor(Math.random() * 5) + 1;.

The word "Arg!" should have quotes around it. Besides escaping quotes, there 
is another way you can include quotation marks inside a string.
Change the double quotes around the string "The monster screams Arg! as it dies. 
You gain experience points and find gold." to single quotes ', then add double quotes around "Arg!".

In order for the &#x2620; emoticon text to properly display on the page, you will need to use the innerHTML property.
The innerHTML property allows you to access or modify the content inside an HTML element using JavaScript.
Here is an example of updating the content for this paragraph element using the innerHTML property.

<p id="demo">This is a paragraph.</p>
document.querySelector("#demo").innerHTML = "Hello, innerHTML";

//const hit = (level * 5) - (Math.floor(Math.random() * xp)); ==> This will set the monster's attack to five 
times their level minus a random number between 0 and the player's xp.

The ternary operator is a conditional operator and can be used as a one-line if-else statement. 
The syntax is: condition ? expressionIfTrue : expressionIfFalse.
The logical OR operator will use the first value if it is truthy â€“ that is, anything apart from NaN, null, 
undefined, 0, -0, 0n, "", and false. Otherwise, it will use the second value.